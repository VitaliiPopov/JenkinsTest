pipeline {
    agent none
    stages {
        stage('Run_Grid') {
            agent { label 'docker_agent' }
            steps {
                // Start docker container
                sh label: 'start_grid', script: '''
                    sudo docker-compose -f ~/my_grid up -d'''

                // Start docker container
                sh label: 'start_store', script: '''
                    docker pull swaggerapi/petstore3:latest
                    docker run --name petstore -d -p 9001:8080 swaggerapi/petstore3:latest'''
            }
        }
        stage('Opencart test') {
            agent { label 'maven_agent' }
            tools { maven 'maven 3.3.9' }
            steps {
                // Get some code from a GitHub repository
                git branch: 'master', url: 'https://github.com/VitaliiPopov/Lv-481.SET-OpenCartTest/'
                //Get TestData.json file with users from Jenkins credentials
                withCredentials([file(credentialsId: 'test_data_json', variable: 'test_data')]) {
                    sh "cp $test_data OpencartTest"
                }
                // Run Maven on a Unix agent.
                sh 'mvn -f OpencartTest/pom.xml -DBrowserName=firefox clean test'
                sh "sudo rm OpencartTest/TestData.json"
            }
        }
        stage('Petstoreapi test') {
            agent { label 'maven_agent' }
            tools { maven 'maven 3.3.9' }
            steps {
                // Get some code from a GitHub repository
                git branch: 'rest', url: 'https://github.com/VitaliiPopov/Lv-481.SET-OpenCartTest/'
                // Run Maven on a Unix agent.
                sh 'mvn -f Rest_Demo/pom.xml clean test'
            }
        }
        stage('Allure reports') {
            agent { label 'maven_agent' }
            steps {
                script {
                    allure([
                            includeProperties: false,
                            jdk              : '',
                            properties       : [],
                            reportBuildPolicy: 'ALWAYS',
                            results          : [[path: 'Rest_Demo/target/allure-results'], [path: 'OpencartTest/target/allure-results']]
                    ])
                }
            }
        }
    }
    post {
        always {
            node('docker_agent') {
                //Stop docker container
                sh label: 'stop_store', script: '''
                    sudo docker-compose -f ~/my_grid down
                    docker stop petstore
                    docker rm petstore
                    docker rmi swaggerapi/petstore3'''
            }
        }
    }
}